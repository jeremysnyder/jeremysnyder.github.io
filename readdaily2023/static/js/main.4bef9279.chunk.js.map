{"version":3,"sources":["actions/data.js","components/TitleBar.js","components/ReadingSection.js","components/Readings.js","components/Info.js","components/BottomBar.js","App.js","serviceWorker.js","reducers/data.js","reducers/root.js","index.js","store.js"],"names":["isWeekend","day","includes","loadDay","date","dispatch","action","payload","type","value","asMoment","moment","week","isoWeek","readingDay","fetch","then","response","status","json","data","catch","e","console","log","ReadingTitle","props","loadedDay","onInfoClick","className","Typography","variant","format","Button","color","size","endIcon","onClick","InfoTitle","ReadingTitleBar","changeDay","Toolbar","IconButton","edge","aria-label","subtract","add","InfoTitleBar","onInfoClose","TitleBar","showConfig","openReading","passages","url","map","x","window","encodeURIComponent","reading","join","open","NoReading","Card","CardHeader","title","disableTypography","CardContent","Reading","CardActions","ReadButton","startIcon","style","marginLeft","bind","ReadAllSection","readings","textAlign","marginTop","ReadingList","length","key","loadReadings","readingFormat","readingData","toReading","fullot","push","ot1","ot2","ot3","psalms","nt","Readings","planTimeframe","Info","Paper","margin","padding","elevation","component","gutterBottom","BottomBar","plan","updatePlanTimeframe","planTimeframeOptions","FormControl","Select","onChange","event","target","MenuItem","disabled","Object","keys","connect","state","readingPlan","readingPlanType","loadPlanType","planType","localStorage","setItem","useState","dayChanged","setDayChanged","setShowConfig","setLoadedDay","getItem","AppBar","position","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","combineReducers","ReactDOM","render","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4bef9279.chunk.js","sourcesContent":["import moment from 'moment'\n\nexport const isWeekend = day => [0, 6].includes(day)\n\nconst readingDay = value => {\n  const asMoment = moment(value)\n  const readingsPerWeek = 5\n  let week = asMoment.isoWeek() - 1 // Week should be zero based for math\n  return isWeekend(asMoment.day())\n    ? null\n    : (week * readingsPerWeek) + asMoment.day()\n}\n\nexport const loadDay = date => dispatch => {\n  const action = payload => dispatch({ type: 'LOAD_DAY', payload: { date, ...payload } })\n  const day = readingDay(date)\n  if (day) {\n    fetch(`./data/chapter-bible-reading-plan/${day}.json`).then(response => {\n      switch (response.status) {\n        case 200:\n          response.json()\n            .then(data => action(data))\n            .catch(e => action({}))\n          break\n        default:\n          console.log('Looks like there was a problem. Status Code: ' + response.status)\n          action({})\n      }\n    })\n  } else action({})\n}\n\nexport const loadPlanType = payload => dispatch => {\n  localStorage.setItem('readDaily-planType', payload)\n  dispatch({ type: 'LOAD_PLAN_TYPE', payload })\n}\n\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport Close from \"@material-ui/icons/Close\";\nimport Info from \"@material-ui/icons/Info\";\n\nfunction ReadingTitle(props) {\n  const { loadedDay, onInfoClick } = props;\n  return (\n    <div className=\"title\">\n      <Typography variant=\"h5\">{loadedDay.format(\"ddd, MMMM D\")}</Typography>\n      <Typography variant=\"subtitle2\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          endIcon={<Info />}\n          onClick={onInfoClick}\n        >\n          Read Daily\n        </Button>\n      </Typography>\n    </div>\n  );\n}\n\nfunction InfoTitle(props) {\n  return (\n    <div className=\"title\">\n      <Typography variant=\"h5\">About Read Daily</Typography>\n    </div>\n  );\n}\n\nexport function ReadingTitleBar(props) {\n  const { loadedDay, changeDay } = props;\n  return (\n    <Toolbar>\n      <IconButton\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={() => changeDay(loadedDay.subtract(1, \"days\"))}\n      >\n        <ArrowBack />\n      </IconButton>\n      <ReadingTitle {...props} />\n      <IconButton\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={() => changeDay(loadedDay.add(1, \"days\"))}\n      >\n        <ArrowForward />\n      </IconButton>\n    </Toolbar>\n  );\n}\n\nexport function InfoTitleBar(props) {\n  const { onInfoClose } = props;\n  return (\n    <Toolbar>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <InfoTitle />\n      <IconButton\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={onInfoClose}\n      >\n        <Close />\n      </IconButton>\n    </Toolbar>\n  );\n}\n\nexport function TitleBar(props) {\n  return props.showConfig ? (\n    <InfoTitleBar {...props} />\n  ) : (\n    <ReadingTitleBar {...props} />\n  );\n}\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\nimport { isWeekend } from '../actions/data'\n\nconst openReading = passages => {\n  const url = `http://esv.org/${passages.map(x => window.encodeURIComponent(x.reading)).join(';')}/`\n  window.open(url, '_blank')\n}\n\nfunction NoReading(props) {\n  const { loadedDay } = props\n  return (\n    <Card className='reading'>\n      <CardHeader title='No readings today' disableTypography={true} className='reading-header' />\n      {loadedDay && isWeekend(loadedDay.day())\n        ?\n        <CardContent className='reading-body'>\n          Consider meditating on other readings, sermon texts, or catching up on last week's readings...\n        </CardContent>\n        : null}\n    </Card>\n  )\n}\n\nfunction Reading(props) {\n  const { title, reading } = props\n  return (\n    <Card className='reading'>\n      <CardHeader title={title} disableTypography={true} className='reading-header' />\n      <CardActions className='reading-body'>\n        {reading.join(\", \")}\n        <ReadButton reading={reading} />\n      </CardActions>\n    </Card>\n  )\n}\n\nfunction ReadButton(props) {\n  const { reading } = props\n  return <Button\n    variant=\"contained\"\n    color=\"default\"\n    startIcon={<LibraryBooksIcon />}\n    style={{ marginLeft: 'auto' }}\n    onClick={openReading.bind(null, [{ reading }])}\n  >\n    Read\n  </Button>\n}\n\nfunction ReadAllSection(props) {\n  const { readings } = props\n  return <div style={{ textAlign: 'center', marginTop: 20 }}>\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      startIcon={<LibraryBooksIcon />}\n      onClick={openReading.bind(null, readings)}\n    >\n      Read All Passages\n  </Button>\n  </div>\n}\n\nexport function ReadingList(props) {\n  const { readings, loadedDay } = props\n  return readings && readings.length\n    ? <div>\n      {readings.map(x => <Reading key={x.title} title={x.title} reading={x.reading} />)}\n      <ReadAllSection readings={readings} />\n    </div>\n    : <NoReading loadedDay={loadedDay} />\n}\n\n","import React from \"react\";\n\nimport { ReadingList } from \"./ReadingSection\";\n// import { BottomBar } from \"./BottomBar\";\n\nconst loadReadings = (readingFormat, readingData) => {\n  if (!readingData) return null;\n  const toReading = (title, reading) => ({ title, reading });\n  const readings = [];\n  switch (readingFormat) {\n    case \"1\":\n      // if (readingData.ot1) readings.push(toReading('Old Testament', [readingData.ot1, readingData.ot2, readingData.ot3]))\n      if (readingData.fullot)\n        readings.push(toReading(\"Old Testament\", [readingData.fullot]));\n      break;\n    case \"3:1\":\n      if (readingData.ot1)\n        readings.push(toReading(\"Old Testament\", [readingData.ot1]));\n      break;\n    case \"3:2\":\n      if (readingData.ot2)\n        readings.push(toReading(\"Old Testament\", [readingData.ot2]));\n      break;\n    case \"3:3\":\n      if (readingData.ot3)\n        readings.push(toReading(\"Old Testament\", [readingData.ot3]));\n      break;\n    default:\n      break;\n  }\n\n  if (readingData.psalms)\n    readings.push(toReading(\"Psalms\", [readingData.psalms]));\n  if (readingData.nt)\n    readings.push(toReading(\"New Testament\", [readingData.nt]));\n\n  return readings;\n};\n\nexport function Readings(props) {\n  const { data, loadedDay, planTimeframe } = props;\n  const readings = loadReadings(planTimeframe, data);\n\n  return (\n    <div className=\"content\">\n      <ReadingList readings={readings} loadedDay={loadedDay} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport function Info(props) {\n  return (\n    <div className=\"content\">\n      <Paper style={{ margin: 10, marginTop: -12, padding: 15 }} elevation={3}>\n        <Typography variant=\"h5\" component=\"h3\">\n          Read Daily Version 2023.0\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          This plan provides a path through the Scriptures that is systematic\n          and sustainable.\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          The Psalms are read twice and the New Testament once in each year.\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          The Old Testament is divided into three portions, allowing it to be\n          read in 1-3 years.\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nexport function BottomBar(props) {\n  const { plan, updatePlanTimeframe } = props\n  const planTimeframeOptions = {\n    '1': 'All In 1 Year',\n    '3:1': '3yr Plan - Year 1',\n    '3:2': '3yr Plan - Year 2',\n    '3:3': '3yr Plan - Year 3',\n  }\n\n  return (\n    <div className='bottom-bar'>\n      <FormControl>\n        <Select\n          value={plan}\n          onChange={event => updatePlanTimeframe(event.target.value)}\n          className='bottom-bar-select'\n        >\n          <MenuItem value=\"\" disabled>Reading Plan</MenuItem>\n          {Object.keys(planTimeframeOptions).map(x => <MenuItem key={x} value={x}>{planTimeframeOptions[x]}</MenuItem>)}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport moment from \"moment\";\n\nimport { loadDay, loadPlanType } from \"./actions/data\";\nimport { TitleBar } from \"./components/TitleBar\";\nimport { Readings } from \"./components/Readings\";\nimport { Info } from \"./components/Info\";\nimport { BottomBar } from \"./components/BottomBar\";\n\nimport \"./App.css\";\n\nfunction App(props) {\n  const { data, loadDay, loadPlanType, planTimeframe } = props;\n  const [dayChanged, setDayChanged] = useState(true);\n  const [showConfig, setShowConfig] = useState(false);\n  const [loadedDay, setLoadedDay] = useState(moment());\n  if (dayChanged) {\n    loadDay(loadedDay);\n    loadPlanType(localStorage.getItem(\"readDaily-planType\") || \"1\");\n    setDayChanged(false);\n  }\n\n  const changeDay = (day) => {\n    setDayChanged(true);\n    setLoadedDay(day);\n  };\n\n  return (\n    <div className=\"app\">\n      <AppBar position=\"static\">\n        <TitleBar\n          loadedDay={loadedDay}\n          changeDay={changeDay}\n          showConfig={showConfig}\n          onInfoClick={() => setShowConfig(true)}\n          onInfoClose={() => setShowConfig(false)}\n        />\n      </AppBar>\n      {showConfig ? (\n        <Info />\n      ) : (\n        <Readings\n          data={data}\n          loadedDay={loadedDay}\n          loadPlanType={loadPlanType}\n          planTimeframe={planTimeframe}\n        />\n      )}\n      <BottomBar plan={planTimeframe} updatePlanTimeframe={loadPlanType} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.data.readingPlan || {},\n  planTimeframe: state.data.readingPlanType || \"1\",\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadDay: (date) => dispatch(loadDay(date)),\n  loadPlanType: (planType) => dispatch(loadPlanType(planType)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'LOAD_DAY':\n      return { ...state, readingPlan: action.payload }\n    case 'LOAD_PLAN_TYPE':\n      return { ...state, readingPlanType: action.payload }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport data from './data'\nexport default combineReducers({\n  data\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}