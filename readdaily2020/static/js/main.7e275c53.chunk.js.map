{"version":3,"sources":["actions/data.js","components/TitleBar.js","components/ReadingSection.js","components/BottomBar.js","components/Readings.js","components/Info.js","App.js","serviceWorker.js","reducers/data.js","reducers/root.js","index.js","store.js"],"names":["loadDay","date","dispatch","action","payload","type","day","value","asMoment","moment","week","month","dayOfYear","readingDay","fetch","then","response","status","json","data","catch","e","console","log","ReadingTitle","props","loadedDay","onInfoClick","className","Typography","variant","format","Button","color","size","endIcon","onClick","InfoTitle","ReadingTitleBar","changeDay","Toolbar","IconButton","edge","aria-label","subtract","add","InfoTitleBar","onInfoClose","style","position","top","TitleBar","showConfig","openReading","passages","url","map","x","window","encodeURIComponent","reading","join","open","NoReading","Card","CardHeader","title","disableTypography","CardContent","Reading","CardActions","ReadButton","startIcon","marginLeft","bind","ReadAllSection","readings","textAlign","marginTop","ReadingList","length","key","BottomBar","plan","updatePlanTimeframe","planTimeframeOptions","FormControl","Select","onChange","event","target","MenuItem","disabled","Object","keys","loadReadings","readingFormat","readingData","toReading","history1","push","history2","wisdom","nt","Readings","loadPlanType","planTimeframe","Info","height","background","Paper","margin","padding","component","connect","state","readingPlan","readingPlanType","planType","localStorage","setItem","useState","dayChanged","setDayChanged","setShowConfig","setLoadedDay","getItem","AppBar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","combineReducers","ReactDOM","render","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e275c53.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst readingDay = value => {\n  const asMoment = moment(value)\n  let week = asMoment.week()\n  // In Moment, the week with Jan1 is week 1, so the last days can fall on that week\n  // Also, week should be zero based for math\n  week = (asMoment.month() === 11 && week === 1 ? 53 : week) - 1\n  return asMoment.day() === 0\n    ? null\n    : asMoment.dayOfYear() - week\n}\n\nexport const loadDay = date => dispatch => {\n  const action = payload => dispatch({ type: 'LOAD_DAY', payload: { date, ...payload } })\n  const day = readingDay(date)\n  if (day) {\n    fetch(`./data/chapter-bible-reading-plan/${day}.json`).then(response => {\n      switch (response.status) {\n        case 200:\n          response.json()\n            .then(data => action(data))\n            .catch(e => action({}))\n          break\n        default:\n          console.log('Looks like there was a problem. Status Code: ' + response.status)\n          action({})\n      }\n    })\n  } else action({})\n}\n\nexport const loadPlanType = payload => dispatch => {\n  localStorage.setItem('readDaily-planType', payload)\n  dispatch({ type: 'LOAD_PLAN_TYPE', payload })\n}\n\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\nimport Close from '@material-ui/icons/Close'\nimport Info from '@material-ui/icons/Info'\n\nfunction ReadingTitle(props) {\n  const { loadedDay, onInfoClick } = props\n  return (\n    <div className='title'>\n      <Typography variant=\"h5\">{loadedDay.format('ddd, MMMM Do')}</Typography>\n      <Typography variant=\"subtitle2\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          endIcon={<Info />}\n          onClick={onInfoClick}\n        >\n          Read Daily\n        </Button>\n      </Typography>\n    </div>\n  )\n}\n\nfunction InfoTitle(props) {\n  return (\n    <div className='title'>\n      <Typography variant=\"h5\">About Read Daily</Typography>\n    </div>\n  )\n}\n\nexport function ReadingTitleBar(props) {\n  const { loadedDay, changeDay } = props\n  return (\n    <Toolbar>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => changeDay(loadedDay.subtract(1, 'days'))}>\n        <ArrowBack />\n      </IconButton>\n      <ReadingTitle {...props} />\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" onClick={() => changeDay(loadedDay.add(1, 'days'))}>\n        <ArrowForward />\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nexport function InfoTitleBar(props) {\n  const { onInfoClose } = props\n  return (\n    <Toolbar style={{ position: 'fixed', top: 0 }}>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <InfoTitle />\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" onClick={onInfoClose}>\n        <Close />\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nexport function TitleBar(props) {\n  return props.showConfig\n    ? <InfoTitleBar {...props} />\n    : <ReadingTitleBar {...props} />\n}\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\n\nconst openReading = passages => {\n  console.log(passages)\n  const url = `http://esv.org/${passages.map(x => window.encodeURIComponent(x.reading)).join(';')}/`\n  window.open(url, '_blank')\n}\n\nfunction NoReading(props) {\n  const { loadedDay } = props\n  return (\n    <Card className='reading'>\n      <CardHeader title='No readings today' disableTypography={true} className='reading-header' />\n      {loadedDay && loadedDay.day() === 0 // Sunday\n        ?\n        <CardContent className='reading-body'>\n          Consider meditating on today's sermon text(s), or catching up on last week's readings...\n        </CardContent>\n        : null}\n    </Card>\n  )\n}\n\nfunction Reading(props) {\n  const { title, reading } = props\n  return (\n    <Card className='reading'>\n      <CardHeader title={title} disableTypography={true} className='reading-header' />\n      <CardActions className='reading-body'>\n        {reading}\n        <ReadButton reading={reading} />\n      </CardActions>\n    </Card>\n  )\n}\n\nfunction ReadButton(props) {\n  const { reading } = props\n  return <Button\n    variant=\"contained\"\n    color=\"default\"\n    startIcon={<LibraryBooksIcon />}\n    style={{ marginLeft: 'auto' }}\n    onClick={openReading.bind(null, [{ reading }])}\n  >\n    Read\n  </Button>\n}\n\nfunction ReadAllSection(props) {\n  const { readings } = props\n  return <div style={{ textAlign: 'center', marginTop: 20 }}>\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      startIcon={<LibraryBooksIcon />}\n      onClick={openReading.bind(null, readings)}\n    >\n      Read All Passages\n  </Button>\n  </div>\n}\n\nexport function ReadingList(props) {\n  const { readings, loadedDay } = props\n  return readings && readings.length\n    ? <div>\n      {readings.map(x => <Reading key={x.title} title={x.title} reading={x.reading} />)}\n      <ReadAllSection readings={readings} />\n    </div>\n    : <NoReading loadedDay={loadedDay} />\n}\n\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nexport function BottomBar(props) {\n  const { plan, updatePlanTimeframe } = props\n  const planTimeframeOptions = {\n    '1': 'All In 1 Year',\n    '2:1': '2yr Plan - Year 1',\n    '2:2': '2yr Plan - Year 2'\n  }\n\n  return (\n    <div className='bottom-bar'>\n      <FormControl>\n        <Select\n          value={plan}\n          onChange={event => updatePlanTimeframe(event.target.value)}\n          className='bottom-bar-select'\n        >\n          <MenuItem value=\"\" disabled>Reading Plan</MenuItem>\n          {Object.keys(planTimeframeOptions).map(x => <MenuItem key={x} value={x}>{planTimeframeOptions[x]}</MenuItem>)}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { ReadingList } from './ReadingSection'\nimport { BottomBar } from './BottomBar'\n\nconst loadReadings = (readingFormat, readingData) => {\n  if (!readingData) return null\n  const toReading = (title, reading) => ({ title, reading })\n  const readings = []\n  switch (readingFormat) {\n    case '1':\n      if (readingData.history1) readings.push(toReading('History 1', readingData.history1))\n      if (readingData.history2) readings.push(toReading('History 2', readingData.history2))\n      break\n    case '2:1':\n      if (readingData.history1) readings.push(toReading('History', readingData.history1))\n      break\n    case '2:2':\n      if (readingData.history2) readings.push(toReading('History', readingData.history2))\n      break\n    default:\n      break\n  }\n\n  if (readingData.wisdom) readings.push(toReading('Wisdom', readingData.wisdom))\n  if (readingData.nt) readings.push(toReading('New Testament', readingData.nt))\n\n  return readings\n}\n\nexport function Readings(props) {\n  const { data, loadedDay, loadPlanType, planTimeframe } = props\n  const readings = loadReadings(planTimeframe, data)\n\n  return (\n    <div className='app'>\n      <ReadingList readings={readings} loadedDay={loadedDay} />\n      <BottomBar plan={planTimeframe} updatePlanTimeframe={loadPlanType} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nexport function Info(props) {\n  return (\n    <div style={{ height: '102%', background: 'white' }}>\n      <Paper style={{ margin: 10, padding: 15 }}>\n        <Typography variant=\"h5\" component=\"h3\">\n          Read Daily v1.0.1\n      </Typography>\n        <Typography component=\"p\">\n          This plan aims to provide readers with a path\n          through the Scriptures that is systematic, sustainable,\n          and spirituality nourishing. Old Testament history and\n          prophets can be covered in one or two years. The New\n          Testament, along with Old Testament wisdom literature,\n          is covered each year — with the Four Gospels read twice\n          and the Proverbs read three times annually.\n      </Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport AppBar from '@material-ui/core/AppBar'\nimport moment from 'moment'\n\nimport { loadDay, loadPlanType } from './actions/data'\nimport { TitleBar } from './components/TitleBar'\nimport { Readings } from './components/Readings'\nimport { Info } from './components/Info'\n\nimport './App.css'\n\n\nfunction App(props) {\n  const { data, loadDay, loadPlanType, planTimeframe } = props\n  const [dayChanged, setDayChanged] = useState(true)\n  const [showConfig, setShowConfig] = useState(false)\n  const [loadedDay, setLoadedDay] = useState(moment())\n  if (dayChanged) {\n    loadDay(loadedDay)\n    loadPlanType(localStorage.getItem('readDaily-planType') || '1')\n    setDayChanged(false)\n  }\n\n  const changeDay = day => {\n    setDayChanged(true)\n    setLoadedDay(day)\n  }\n\n  return (\n    <div className='app'>\n      <AppBar position=\"static\">\n        <TitleBar loadedDay={loadedDay} changeDay={changeDay} showConfig={showConfig} onInfoClick={() => setShowConfig(true)} onInfoClose={() => setShowConfig(false)} />\n      </AppBar>\n      {\n        showConfig\n          ? <Info />\n          : <Readings data={data} loadedDay={loadedDay} loadPlanType={loadPlanType} planTimeframe={planTimeframe} />\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  data: (state.data.readingPlan || {}),\n  planTimeframe: (state.data.readingPlanType || '1'),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadDay: date => dispatch(loadDay(date)),\n  loadPlanType: planType => dispatch(loadPlanType(planType))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'LOAD_DAY':\n      return { ...state, readingPlan: action.payload }\n    case 'LOAD_PLAN_TYPE':\n      return { ...state, readingPlanType: action.payload }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport data from './data'\nexport default combineReducers({\n  data\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}