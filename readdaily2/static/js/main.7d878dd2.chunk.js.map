{"version":3,"sources":["actions/data.js","components/TitleBar.js","components/ReadingSection.js","components/BottomBar.js","components/Readings.js","components/Info.js","App.js","serviceWorker.js","reducers/data.js","reducers/root.js","index.js","store.js"],"names":["loadDay","date","dispatch","action","payload","type","day","value","asMoment","moment","week","month","dayOfYear","readingDay","fetch","then","response","status","json","data","catch","e","console","log","ReadingTitle","props","loadedDay","onInfoClick","className","Typography","variant","format","Button","color","size","endIcon","onClick","InfoTitle","ReadingTitleBar","changeDay","Toolbar","IconButton","edge","aria-label","subtract","add","InfoTitleBar","onInfoClose","TitleBar","showConfig","openReading","passages","url","map","x","window","encodeURIComponent","reading","join","open","NoReading","Card","CardHeader","title","disableTypography","CardContent","Reading","CardActions","ReadButton","passage","startIcon","style","marginLeft","bind","ReadAllSection","readings","textAlign","marginTop","ReadingList","length","key","BottomBar","plan","updatePlanTimeframe","planTimeframeOptions","FormControl","Select","onChange","event","target","MenuItem","disabled","Object","keys","loadReadings","readingFormat","readingData","toReading","otReading","push","ot2Reading","psalmsReading","gapReading","letterReading","Readings","loadPlanType","planTimeframe","Info","Paper","margin","padding","component","href","rel","connect","state","readingPlan","readingPlanType","planType","localStorage","setItem","useState","dayChanged","setDayChanged","setShowConfig","setLoadedDay","getItem","AppBar","position","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","combineReducers","ReactDOM","render","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d878dd2.chunk.js","sourcesContent":["import moment from 'moment'\n\nconst readingDay = value => {\n  const asMoment = moment(value)\n  let week = asMoment.week()\n  // In Moment, the week with Jan1 is week 1, so the last days can fall on that week\n  // Also, week should be zero based for math\n  week = (asMoment.month() === 11 && week === 1 ? 53 : week) - 1\n  return asMoment.day() === 0\n    ? null\n    : asMoment.dayOfYear() - week\n}\n\nexport const loadDay = date => dispatch => {\n  const action = payload => dispatch({ type: 'LOAD_DAY', payload })\n  const day = readingDay(date)\n  if (day) {\n    fetch(`./data/chapter-bible-reading-plan/${day}.json`).then(response => {\n      switch (response.status) {\n        case 200:\n          response.json()\n            .then(data => action(data))\n            .catch(e => action({}))\n          break\n        default:\n          console.log('Looks like there was a problem. Status Code: ' + response.status)\n          action({})\n      }\n    })\n  } else action({})\n}\n\nexport const loadPlanType = payload => dispatch => {\n  localStorage.setItem('readDaily-planType', payload)\n  dispatch({ type: 'LOAD_PLAN_TYPE', payload })\n}\n\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\nimport Close from '@material-ui/icons/Close'\nimport Info from '@material-ui/icons/Info'\n\nfunction ReadingTitle(props) {\n  const { loadedDay, onInfoClick } = props\n  return (\n    <div className='title'>\n      <Typography variant=\"h5\">{loadedDay.format('ddd, MMMM Do')}</Typography>\n      <Typography variant=\"subtitle2\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          endIcon={<Info />}\n          onClick={onInfoClick}\n        >\n          Read Daily\n        </Button>\n      </Typography>\n    </div>\n  )\n}\n\nfunction InfoTitle(props) {\n  return (\n    <div className='title'>\n      <Typography variant=\"h5\">About Read Daily</Typography>\n    </div>\n  )\n}\n\nexport function ReadingTitleBar(props) {\n  const { loadedDay, changeDay } = props\n  return (\n    <Toolbar>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => changeDay(loadedDay.subtract(1, 'days'))}>\n        <ArrowBack />\n      </IconButton>\n      <ReadingTitle {...props} />\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" onClick={() => changeDay(loadedDay.add(1, 'days'))}>\n        <ArrowForward />\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nexport function InfoTitleBar(props) {\n  const { onInfoClose } = props\n  return (\n    <Toolbar>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        <Info />\n      </IconButton>\n      <InfoTitle />\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" onClick={onInfoClose}>\n        <Close />\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nexport function TitleBar(props) {\n  return props.showConfig\n    ? <InfoTitleBar {...props} />\n    : <ReadingTitleBar {...props} />\n}\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\n\nconst openReading = passages => {\n  const url = `http://esv.org/${passages.map(x => window.encodeURIComponent(x.reading)).join(';')}/`\n  window.open(url, '_blank')\n}\n\nfunction NoReading(props) {\n  return (\n    <Card className='reading'>\n      <CardHeader title='No readings today' disableTypography={true} className='reading-header' />\n      <CardContent className='reading-body'>\n        Consider meditating on today's sermon text(s), or catching up on last week's readings...\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction Reading(props) {\n  const { title, reading } = props\n  return (\n    <Card className='reading'>\n      <CardHeader title={title} disableTypography={true} className='reading-header' />\n      <CardActions className='reading-body'>\n        {reading}\n        <ReadButton passage={reading} />\n      </CardActions>\n    </Card>\n  )\n}\n\nfunction ReadButton(props) {\n  const { passage } = props\n  return <Button\n    variant=\"contained\"\n    color=\"default\"\n    startIcon={<LibraryBooksIcon />}\n    style={{ marginLeft: 'auto' }}\n    onClick={openReading.bind(null, [passage])}\n  >\n    Read\n  </Button>\n}\n\nfunction ReadAllSection(props) {\n  const { readings } = props\n  return <div style={{ textAlign: 'center', marginTop: 20 }}>\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      startIcon={<LibraryBooksIcon />}\n\n      onClick={openReading.bind(null, readings)}\n    >\n      Read All Passages\n  </Button>\n  </div>\n}\n\nexport function ReadingList(props) {\n  const { readings } = props\n  return readings && readings.length\n    ? <div>\n      {readings.map(x => <Reading key={x.title} title={x.title} reading={x.reading} />)}\n      <ReadAllSection readings={readings} />\n    </div>\n    : <NoReading />\n}\n\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nexport function BottomBar(props) {\n  const { plan, updatePlanTimeframe } = props\n  const planTimeframeOptions = {\n    '1': 'All In 1 Year',\n    '2:1': '2yr Plan - Year 1',\n    '2:2': '2yr Plan - Year 2'\n  }\n\n  return (\n    <div className='bottom-bar'>\n      <FormControl>\n        <Select\n          value={plan}\n          onChange={event => updatePlanTimeframe(event.target.value)}\n          className='bottom-bar-select'\n        >\n          <MenuItem value=\"\" disabled>Reading Plan</MenuItem>\n          {Object.keys(planTimeframeOptions).map(x => <MenuItem key={x} value={x}>{planTimeframeOptions[x]}</MenuItem>)}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { ReadingList } from './ReadingSection'\nimport { BottomBar } from './BottomBar'\n\nconst loadReadings = (readingFormat, readingData) => {\n  if (!readingData) return null\n  const toReading = (title, reading) => ({ title, reading })\n  const readings = []\n  switch (readingFormat) {\n    case '1':\n      if (readingData.otReading) readings.push(toReading('Old Testament 1', readingData.otReading))\n      if (readingData.ot2Reading) readings.push(toReading('Old Testament 2', readingData.ot2Reading))\n      break\n    case '2:1':\n      if (readingData.otReading) readings.push(toReading('Old Testament', readingData.otReading))\n      break\n    case '2:2':\n      if (readingData.ot2Reading) readings.push(toReading('Old Testament', readingData.ot2Reading))\n      break\n    default:\n      break\n  }\n\n  if (readingData.psalmsReading) readings.push(toReading('Psalms', readingData.psalmsReading))\n  if (readingData.gapReading) readings.push(toReading('Gospels/Acts/Proverbs', readingData.gapReading))\n  if (readingData.letterReading) readings.push(toReading('Letters', readingData.letterReading))\n\n  return readings\n}\n\nexport function Readings(props) {\n  const { data, loadPlanType, planTimeframe } = props\n  const readings = loadReadings(planTimeframe, data)\n\n  return (\n    <div className='app'>\n      <ReadingList readings={readings} />\n      <BottomBar plan={planTimeframe} updatePlanTimeframe={loadPlanType} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nexport function Info(props) {\n  return (\n    <Paper style={{ margin: 10, padding: 10 }}>\n      <Typography variant=\"h5\" component=\"h3\">\n        Read Daily v1.0.0\n      </Typography>\n      <Typography component=\"p\">\n        Read Daily provides chapter-based readings from the Two-Year Bible Reading Plan, produced jointly by\n        Reformation OPC (Queens, NYC) and Resurrection OPC (State College, PA).\n        For more resources, visit <a href=\"http://resurrectionopc.org/resources\" target=\"_blank\" rel=\"noopener noreferrer\">resurrectionopc.org/resources</a>.\n      </Typography>\n    </Paper>\n  )\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport AppBar from '@material-ui/core/AppBar'\nimport moment from 'moment'\n\nimport { loadDay, loadPlanType } from './actions/data'\nimport { TitleBar } from './components/TitleBar'\nimport { Readings } from './components/Readings'\nimport { Info } from './components/Info'\n\nimport './App.css'\n\n\nfunction App(props) {\n  const { data, loadDay, loadPlanType, planTimeframe } = props\n  const [dayChanged, setDayChanged] = useState(true)\n  const [showConfig, setShowConfig] = useState(false)\n  const [loadedDay, setLoadedDay] = useState(moment())\n  if (dayChanged) {\n    loadDay(loadedDay)\n    loadPlanType(localStorage.getItem('readDaily-planType') || '1')\n    setDayChanged(false)\n  }\n\n  const changeDay = day => {\n    setDayChanged(true)\n    setLoadedDay(day)\n  }\n\n  return (\n    <div className='app'>\n      <AppBar position=\"static\">\n        <TitleBar loadedDay={loadedDay} changeDay={changeDay} showConfig={showConfig} onInfoClick={() => setShowConfig(true)} onInfoClose={() => setShowConfig(false)} />\n      </AppBar>\n      {\n        showConfig\n          ? <Info />\n          : <Readings data={data} loadPlanType={loadPlanType} planTimeframe={planTimeframe} />\n      }\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  data: (state.data.readingPlan || {}),\n  planTimeframe: (state.data.readingPlanType || '1'),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadDay: date => dispatch(loadDay(date)),\n  loadPlanType: planType => dispatch(loadPlanType(planType))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'LOAD_DAY':\n      return { ...state, readingPlan: action.payload }\n    case 'LOAD_PLAN_TYPE':\n      return { ...state, readingPlanType: action.payload }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport data from './data'\nexport default combineReducers({\n  data\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}