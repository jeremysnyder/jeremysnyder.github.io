{"version":3,"sources":["reducers/settings.js","components/Config.js","actions/settings.js","components/Files.js","actions/data.js","App.js","serviceWorker.js","reducers/root.js","reducers/data.js","index.js","store.js"],"names":["activities","tagIds","initialConfig","reduce","all","t","values","allActivities","a","Object","objectSpread","defineProperty","Config","state","turningOff","Set","activity","tagId","_this2","this","cellKey","concat","toggleActivity","_this2$props","props","config","updateConfig","updatedTurningOff","delete","setState","updated","Date","now","timeToTurnOff","Math","floor","random","timeToWarnOfTurnOff","console","log","setTimeout","add","_this3","react_default","createElement","className","rowSpan","colSpan","length","map","key","id","style","backgroundColor","has","undefined","type","disabled","onChange","toggle","bind","checked","React","Component","connect","settings","dispatch","payload","Files","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","loggedIn","lastUpload","inherits","createClass","value","accessToken","setInterval","tagData","recordData","keys","x","toConsumableArray","lines","line","join","fill","toCsvLines","interval","fn","stop","delay","repeatEvery","_this2$props2","resetData","timestamp","fileData","tag","date","format","fileName","forEach","name","content","token","file","Blob","metadata","mimeType","parents","body","FormData","append","JSON","stringify","fetch","method","headers","Headers","Authorization","then","res","json","val","uploadFile","response","generateFiles","_this$state","lastUploadForDisplay","toLocaleString","position","top","right","google_login","clientId","buttonText","onSuccess","loginResponse","onFailure","cookiePolicy","scope","float","data","App","components_Config","components_Files","Boolean","window","location","hostname","match","combineReducers","action","ReactDOM","render","es","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6RAAaA,EAAa,CACxB,WACA,SACA,UACA,WACA,UACA,cACA,qBACA,gBACA,aAGWC,EAAS,CACpB,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAgBD,EAAOE,OAAO,SAACC,EAAKC,GACxC,IAAMC,EAASN,EAAWG,OAAO,SAACI,EAAeC,GAC/C,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIF,EAAXE,OAAAE,EAAA,EAAAF,CAAA,GAA2BD,GAAI,KAC9B,IACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAIL,EAAXK,OAAAE,EAAA,EAAAF,CAAA,GAAiBJ,EAAIC,KACpB,ICtBGM,6MACJC,MAAQ,CACNC,WAAY,IAAIC,2EAGXC,EAAUC,GAAO,IAAAC,EAAAC,KAChBC,EAAO,GAAAC,OAAMJ,EAAN,KAAAI,OAAeL,GACtBM,EAAiB,WAAM,IAAAC,EACIL,EAAKM,MAA7BC,EADoBF,EACpBE,OAAQC,EADYH,EACZG,aACfD,EAAOR,GAAOD,IAAaS,EAAOR,GAAOD,GACzCU,EAAaD,GACb,IAAME,EAAoBT,EAAKL,MAAMC,WACrCa,EAAkBC,OAAOR,GACzBF,EAAKW,SAAS,CAACC,QAASC,KAAKC,MAAOlB,WAAYa,KAMlDL,IACA,IAAMW,EAAgB,KAAO,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,WAC3CC,EAAsBJ,EAAgB,GAC5CK,QAAQC,IAAR,eAAAlB,OAA2BD,EAA3B,QAAAC,OAAyCY,EAAzC,MACAO,WARsB,WACpBF,QAAQC,IAAR,eAAAlB,OAA2BD,EAA3B,YACAF,EAAKW,SAAS,CAACf,WAAYI,EAAKL,MAAMC,WAAW2B,IAAIrB,MAMP,IAAtBiB,GAC1BG,WAAWlB,EAAgC,IAAhBW,oCAGpB,IAAAS,EAAAvB,KACAM,EAAUN,KAAKK,MAAfC,OACAX,EAAcK,KAAKN,MAAnBC,WAEP,OACE6B,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,UACbF,EAAAnC,EAAAoC,cAAA,aACED,EAAAnC,EAAAoC,cAAA,aACAD,EAAAnC,EAAAoC,cAAA,UACED,EAAAnC,EAAAoC,cAAA,MAAIE,QAAS,GAAb,YACAH,EAAAnC,EAAAoC,cAAA,MAAIG,QAAS9C,EAAO+C,QAApB,WAEFL,EAAAnC,EAAAoC,cAAA,UAEI3C,EAAOgD,IAAI,SAAA5C,GAAC,OAAIsC,EAAAnC,EAAAoC,cAAA,MAAIM,IAAK7C,GAAIA,OAIjCsC,EAAAnC,EAAAoC,cAAA,aAEE5C,EAAWiD,IAAI,SAAAzC,GACb,OACAmC,EAAAnC,EAAAoC,cAAA,MAAIM,IAAK1C,GACPmC,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,OAAOrC,GAEnBP,EAAOgD,IAAI,SAAA5C,GACT,OACEsC,EAAAnC,EAAAoC,cAAA,MAAIM,IAAK7C,EAAG8C,GAAE,GAAA9B,OAAKhB,EAAL,KAAAgB,OAAUb,GAAKqC,UAAU,eAAeO,MAAO,CAACC,gBAAiBvC,EAAWwC,IAAX,GAAAjC,OAAkBhB,EAAlB,KAAAgB,OAAuBb,IAAO,WAAQ+C,IACnHZ,EAAAnC,EAAAoC,cAAA,SAAOY,KAAK,WAAWC,SAAUhC,EAAOpB,GAAGG,GAAIkD,SAAUhB,EAAKiB,OAAOC,KAAKlB,EAAMlC,EAAGH,GAAIwD,QAASpC,EAAOpB,GAAGG,qBAvD7GsD,IAAMC,WAiFZC,cAVS,SAAAnD,GACtB,MAAO,CACLY,QAASZ,EAAMoD,UAAY,IAAIxC,SAIP,SAAAyC,GAAQ,MAAK,CACvCxC,aAAc,SAAAD,GAAM,OAAIyC,ECnFE,SAACzC,GAAD,OAAY,SAAAyC,GACtCA,EAAS,CACRV,KAAM,gBACNW,QAAS1C,KDgFuBC,CAAaD,OAGjCuC,CAA6CpD,oCE/B/CwD,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAAU,KAAAiD,GAAA,QAAAK,EAAAC,UAAA1B,OAAA2B,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAN,EAAA9D,OAAAqE,EAAA,EAAArE,CAAAU,MAAAmD,EAAA7D,OAAAsE,EAAA,EAAAtE,CAAA2D,IAAAY,KAAAC,MAAAX,EAAA,CAAAnD,MAAAE,OAAAsD,MAEE9D,MAAQ,CACNqE,UAAU,EACVC,WAAY,MAJhBZ,EAAA,OAAA9D,OAAA2E,EAAA,EAAA3E,CAAA2D,EAAAC,GAAA5D,OAAA4E,EAAA,EAAA5E,CAAA2D,EAAA,EAAAlB,IAAA,gBAAAoC,MAAA,SAOgBC,GAAa,IAAArE,EAAAC,KACrBoE,GAAapE,KAAKU,SAAS,CAACqD,UAAU,IAC1C5C,QAAQC,IAAI,2CACZiD,YAAY,WAAM,IAAAjE,EACsBL,EAAKM,MAApCC,EADSF,EACTE,OAAQgE,EADClE,EACDkE,SAGfC,EAJgBnE,EACQmE,YAELjF,OAAOkF,KAAKlE,GAAQtB,OADvB,SAACC,EAAKwF,GAAN,OAAAnF,OAAAC,EAAA,EAAAD,CAAA,GAAiBL,EAAjBK,OAAAE,EAAA,EAAAF,CAAA,GAAuBmF,EAAvB,GAAAvE,OAAAZ,OAAAoF,EAAA,EAAApF,CAAgCL,EAAIwF,IAAM,IAA1CnF,OAAAoF,EAAA,EAAApF,CAvDH,SAACwD,EAAU6B,GAC5B,IAAMC,EAAO/F,EAAWG,OAAO,SAACG,EAAQE,GAAT,SAAAa,OAAAZ,OAAAoF,EAAA,EAAApF,CAAoBH,GAApB,CAA4B2D,EAASzD,GAAK,EAAG,KAAK,IAAIwF,KAAK,KAC1F,OAAOpB,MAAMkB,GAAOG,KAAKF,GAqD6CG,CAAWzE,EAAOmE,GAzDjE,QA0DoCH,KAEtD,MA7Ba,SAACU,EAAUC,GAC7B,IAEIC,EAFErE,EAAM,IAAID,KACVuE,EAAQH,EAAWnE,EAAMmE,EAO/B7D,QAAQC,IAAR,kBAAAlB,OAA8BiF,EAA9B,4BAAAjF,OAA8D8E,EAA9D,OACA3D,WALc,WACZ6D,EAAOb,YAAYY,EAAID,GACvBC,KAGgBE,GAgChBC,CA5Ce,IAiCK,WAAM,IAAAC,EACKtF,EAAKM,MAA3BiE,EADiBe,EACjBf,QAASgB,EADQD,EACRC,UACVC,EAAY,IAAI3E,KAEhB4E,EAAWlG,OAAOkF,KAAKF,GAAStF,OADtB,SAACC,EAAKwG,GAAN,OAAAnG,OAAAC,EAAA,EAAAD,CAAA,GAAmBL,EAAnBK,OAAAE,EAAA,EAAAF,CAAA,GA1DL,SAACmG,EAAKF,GAAN,eAAArF,OACNuF,EADM,KAAAvF,OACCwF,IAAKC,OAAOJ,EAAW,uBADxB,QA0D8BK,CAASH,EAAKF,GAAajB,EAAQmB,GAAKZ,KAAK,WAChC,IACtDvF,OAAOkF,KAAKgB,GAAUK,QAAQ,SAAApB,GAAC,OAzDlB,SAACqB,EAAMC,EAASC,GACjC,IAAMC,EAAO,IAAIC,KAAK,CAACH,GAAU,CAAC1D,KAAM,aAClC8D,EAAW,CACfL,OACAM,SAAU,WACVC,QAAS,CAhBQ,sCAkBbC,EAAO,IAAIC,SAGjB,OAFAD,EAAKE,OAAO,WAAY,IAAIN,KAAK,CAACO,KAAKC,UAAUP,IAAY,CAAE9D,KAAM,sBACrEiE,EAAKE,OAAO,OAAQP,GACbU,MAAM,kFAAmF,CAC9FC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAEC,cAAA,UAAA7G,OAA2B8F,KAClDM,SAEDU,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAShG,QAAQC,IAAI+F,KAyCYC,CAAW3C,EAAGe,EAASf,GAAIL,KAC9D,IAAMJ,EAAapD,KAAKC,MACxBd,EAAKW,SAAS,CAACsD,eACfsB,QAzBN,CAAAvD,IAAA,gBAAAoC,MAAA,SA+BgBkD,GACRA,GAAYA,EAASjD,aACvBpE,KAAKsH,cAAcD,EAASjD,eAjClC,CAAArC,IAAA,SAAAoC,MAAA,WAqCW,IAAAoD,EACwBvH,KAAKN,MAA7BqE,EADAwD,EACAxD,SAAUC,EADVuD,EACUvD,WACXwD,EAAuBxD,EAAa,IAAIpD,KAAKoD,GAAYyD,iBAAmB,KAClF,OAAOjG,EAAAnC,EAAAoC,cAAA,WAEFsC,EAWD,KAVAvC,EAAAnC,EAAAoC,cAAA,OAAKQ,MAAO,CAACyF,SAAU,QAASC,IAAK,GAAIC,MAAO,KAC9CpG,EAAAnC,EAAAoC,cAACoG,EAAA,YAAD,CACEC,SA7FK,2EA8FLC,WAAW,QACXC,UAAWhI,KAAKiI,cAAcxF,KAAKzC,MACnCkI,UAAWlI,KAAKiI,cAAcxF,KAAKzC,MACnCmI,aAAc,qBACdC,MAjGE,2CAuGNZ,EACAhG,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,WACbF,EAAAnC,EAAAoC,cAAA,8BADF,IAC2BD,EAAAnC,EAAAoC,cAAA,KAAGQ,MAAO,CAACoG,MAAO,UAAWb,IAExD,UA5DRvE,EAAA,CAA2BN,IAAMC,WA+ElBC,cAbS,SAAAnD,GACtB,MAAO,CACLY,QAASZ,EAAMoD,UAAY,IAAIxC,OAC/BgE,QAAU5E,EAAM4I,MAAQ,KAID,SAAAvF,GAAQ,MAAK,CACtCwB,WAAY,SAAA+D,GAAI,OAAIvF,ECjII,SAACuF,GAAD,OAAU,SAAAvF,GAClCA,EAAS,CACRV,KAAM,cACNW,QAASsF,KD8HmB/D,CAAW+D,KACxChD,UAAW,kBAAMvC,EC3HY,SAAAA,GAC7BA,EAAS,CACRV,KAAM,aACNW,QAAS,UD4HGH,CAA6CI,GEjIvCsF,mLAEjB,OAAO/G,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,OACpBF,EAAAnC,EAAAoC,cAAA,mBACAD,EAAAnC,EAAAoC,cAAC+G,EAAD,MACAhH,EAAAnC,EAAAoC,cAACgH,EAAD,cAL2B9F,IAAMC,WCOnB8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECfSC,cAAgB,CAC7BjG,SPyBa,WAA6C,IAA5CpD,EAA4C6D,UAAA1B,OAAA,QAAAO,IAAAmB,UAAA,GAAAA,UAAA,GAApC,CAACjD,OAAQvB,GAAgBiK,EAAWzF,UAAA1B,OAAA,EAAA0B,UAAA,QAAAnB,EAC1D,OAAQ4G,EAAO3G,MACd,IAAK,gBACJ,MAAO,CACN/B,OAAQ0I,EAAOhG,SAEjB,QACC,OAAOtD,IO/BT4I,KCLa,WAAwB,IAAvB5I,EAAuB6D,UAAA1B,OAAA,QAAAO,IAAAmB,UAAA,GAAAA,UAAA,GAAf,GAAIyF,EAAWzF,UAAA1B,OAAA,EAAA0B,UAAA,QAAAnB,EACrC,OAAQ4G,EAAO3G,MACd,IAAK,cACJ,OAAO/C,OAAAC,EAAA,EAAAD,CAAA,GAAII,EAAUsJ,EAAOhG,SAC5B,IAAK,aACH,MAAO,GACT,QACA,OAAOtD,MCCXuJ,IAASC,OACP1H,EAAAnC,EAAAoC,cAAC0H,EAAA,EAAD,CAAUC,MCNG,WAAyC,IAAjBC,EAAiB9F,UAAA1B,OAAA,QAAAO,IAAAmB,UAAA,GAAAA,UAAA,GAAJ,GACnD,OAAO+F,YACNC,EACAF,EACCG,YAAgBC,MDEAC,IAChBlI,EAAAnC,EAAAoC,cAACkI,EAAD,OAEDC,SAASC,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC","file":"static/js/main.69d4950d.chunk.js","sourcesContent":["export const activities = [\n  'Drinking',\n  'Eating',\n  'Walking',\n  'Standing',\n  'Sitting',\n  'Chewing Cud',\n  'High Activity Heat',\n  'Standing Heat',\n  'In Parlor'\n]\n\nexport const tagIds = [\n  '100',\n  '101',\n  '102',\n  '103',\n  '104',\n  '105',\n  '106'\n]\n\nconst initialConfig = tagIds.reduce((all, t) => {\n  const values = activities.reduce((allActivities, a) => {\n    return {...allActivities, [a]: false}\n  }, {})\n  return {...all, [t]: values}\n}, {})\n\nexport default (state = {config: initialConfig}, action) => {\n  switch (action.type) {\n   case 'UPDATE_CONFIG':\n    return {\n     config: action.payload\n    }\n   default:\n    return state\n  }\n }","import React from 'react';\nimport { connect } from 'react-redux'\nimport { updateConfig } from '../actions/settings'\nimport { tagIds, activities } from '../reducers/settings'\n\nclass Config extends React.Component {\n  state = {\n    turningOff: new Set()\n  }\n\n  toggle(activity, tagId) {\n    const cellKey = `${tagId}-${activity}`\n    const toggleActivity = () => {\n      const {config, updateConfig} = this.props\n      config[tagId][activity] = !config[tagId][activity]\n      updateConfig(config)\n      const updatedTurningOff = this.state.turningOff\n      updatedTurningOff.delete(cellKey)\n      this.setState({updated: Date.now(), turningOff: updatedTurningOff})\n    }\n    const warnOfTurnOff = () => {\n      console.log(`Turning off ${cellKey} in 10s`)\n      this.setState({turningOff: this.state.turningOff.add(cellKey)})\n    }\n    toggleActivity()\n    const timeToTurnOff = 60 + (-3 + Math.floor(Math.random() * 6))\n    const timeToWarnOfTurnOff = timeToTurnOff - 10\n    console.log(`Turning off ${cellKey} in ${timeToTurnOff}s`)\n    setTimeout(warnOfTurnOff, timeToWarnOfTurnOff * 1000) // Turn it off in 1m\n    setTimeout(toggleActivity, timeToTurnOff * 1000) // Turn it off in 1m\n  }\n\n  render() {\n    const {config} = this.props\n    const {turningOff} = this.state\n\n    return (\n      <div className='config'>\n        <table>\n          <thead>\n          <tr>\n            <th rowSpan={2}>Activity</th>\n            <th colSpan={tagIds.length}>Tag ID</th>\n          </tr>\n          <tr>\n            {\n              tagIds.map(t => <th key={t}>{t}</th>)\n            }\n          </tr>\n          </thead>\n          <tbody>\n          {\n            activities.map(a => {\n              return (\n              <tr key={a}>\n                <th className='row'>{a}</th>\n                {\n                  tagIds.map(t => {\n                    return (\n                      <td key={t} id={`${t}-${a}`} className='table-option' style={{backgroundColor: turningOff.has(`${t}-${a}`) ? 'red' : undefined}}>\n                        <input type='checkbox' disabled={config[t][a]} onChange={this.toggle.bind(this, a, t)} checked={config[t][a]}></input>\n                      </td>\n                    )\n                  })\n                }\n              </tr>\n              )\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    config: (state.settings || {}).config\n  }\n}\n\n const mapDispatchToProps = dispatch => ({\n  updateConfig: config => dispatch(updateConfig(config))\n })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Config)\n","export const updateConfig = (config) => dispatch => {\n  dispatch({\n   type: 'UPDATE_CONFIG',\n   payload: config\n  })\n }","import React from 'react';\nimport { GoogleLogin } from 'react-google-login'\nimport { connect } from 'react-redux'\nimport { activities } from '../reducers/settings'\nimport { recordData, resetData } from '../actions/data'\nimport date from 'date-and-time'\n\nconst clientId = '971718329500-246gc90qrsv07kbsc2hhbvq3r738k6sc.apps.googleusercontent.com'\nconst scope = 'https://www.googleapis.com/auth/drive'\nconst tappFolderId = '1bRgaE8NhLpcYKb1l8rgxvSmE0nf5oNzL'\nconst recordsPerSecond = 4\n\nconst toCsvLines = (settings, lines) => {\n  const line = activities.reduce((values, a) => ([...values, settings[a] ? 1 :0]), []).join(',')\n  return Array(lines).fill(line)\n}\n\nconst fileName = (tag, timestamp) =>\n  `T-APP-${tag}-${date.format(timestamp, 'YYYY-MM-DD-HH-mm-ss')}.txt`\n\nconst uploadFile = (name, content, token) => {\n  const file = new Blob([content], {type: 'text/csv'})\n  const metadata = {\n    name,\n    mimeType: 'text/csv', // mimeType at Google Drive\n    parents: [tappFolderId], // Folder ID at Google Drive\n  }\n  const body = new FormData()\n  body.append('metadata', new Blob([JSON.stringify(metadata)], { type: 'application/json' }))\n  body.append('file', file)\n  return fetch('https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id', {\n    method: 'POST',\n    headers: new Headers({ 'Authorization': `Bearer ${token}` }),\n    body\n  })\n  .then((res) => res.json())\n  .then((val) => console.log(val))\n}\n\nconst ONE_MINUTE = 60 * 1000\n\nconst repeatEvery = (interval, fn) => {\n  const now = new Date()\n  const delay = interval - now % interval\n  let stop\n  const stopRepeat = () => stop ? stop() : null\n  const start = () => {\n    stop = setInterval(fn, interval)\n    fn()\n  }\n  console.log(`Starting fn in ${delay}ms, with an interval of ${interval}ms`)\n  setTimeout(start, delay)\n  return stopRepeat\n}\n\nexport class Files extends React.Component {\n\n  state = {\n    loggedIn: false,\n    lastUpload: null\n  }\n\n  generateFiles(accessToken) {\n    if (accessToken) this.setState({loggedIn: true})\n    console.log('Access Token in effect, uploading files')\n    setInterval(() => {\n      const {config, tagData, recordData} = this.props\n      const reducer = (all, x) => ({...all, [x]: [...(all[x] || []), ...toCsvLines(config[x], recordsPerSecond)]})\n      const newTagData = Object.keys(config).reduce(reducer, tagData)\n      recordData(newTagData)\n    }, 1000) // Generate 4 records every 1s for each tag\n\n    const uploadFiles = () => {\n      const {tagData, resetData} = this.props\n      const timestamp = new Date()\n      const reducer = (all, tag) => ({...all, [fileName(tag, timestamp)]: tagData[tag].join('\\r\\n')})\n      const fileData = Object.keys(tagData).reduce(reducer, {})\n      Object.keys(fileData).forEach(x => uploadFile(x, fileData[x], accessToken))\n      const lastUpload = Date.now()\n      this.setState({lastUpload})\n      resetData()\n    }\n\n    repeatEvery(ONE_MINUTE, uploadFiles)\n  }\n\n  loginResponse(response) {\n    if (response && response.accessToken) {\n      this.generateFiles(response.accessToken)\n    }\n  }\n\n  render() {\n    const {loggedIn, lastUpload} = this.state\n    const lastUploadForDisplay = lastUpload ? new Date(lastUpload).toLocaleString() : null\n    return <div>\n      {\n        !loggedIn ? \n        <div style={{position: 'fixed', top: 10, right: 10}}>\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login\"\n            onSuccess={this.loginResponse.bind(this)}\n            onFailure={this.loginResponse.bind(this)}\n            cookiePolicy={'single_host_origin'}\n            scope={scope}\n          />\n        </div> : \n        null\n      }\n      {\n        lastUploadForDisplay ? \n        <div className='message'>\n          <b>Last Upload Time:</b> <i style={{float: 'right'}}>{lastUploadForDisplay}</i>\n        </div> : \n        null\n      }\n    </div>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    config: (state.settings || {}).config,\n    tagData: (state.data || {})\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  recordData: data => dispatch(recordData(data)),\n  resetData: () => dispatch(resetData())\n })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Files)\n","export const recordData = (data) => dispatch => {\n  dispatch({\n   type: 'RECORD_DATA',\n   payload: data\n  })\n }\n\nexport const resetData = () => dispatch => {\n  dispatch({\n   type: 'RESET_DATA',\n   payload: []\n  })\n }","import React from 'react';\nimport './App.css';\nimport Config from './components/Config'\nimport Files from './components/Files'\n\nexport default class App extends React.Component {\n  render() {\n    return <div className=\"App\">\n      <h2>T-APP</h2>\n      <Config />\n      <Files />\n    </div>\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport settings from './settings'\nimport data from './data'\nexport default combineReducers({\n  settings,\n  data\n})","export default (state = {}, action) => {\n  switch (action.type) {\n   case 'RECORD_DATA':\n    return {...state, ...action.payload}\n    case 'RESET_DATA':\n      return {}\n    default:\n    return state\n  }\n }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n   <App />\n  </Provider>,\n  document.getElementById('root')\n );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nexport default function configureStore(initialState={}) {\n return createStore(\n  rootReducer,\n  initialState,\n   applyMiddleware(thunk)\n );\n}"],"sourceRoot":""}